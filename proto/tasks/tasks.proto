syntax = "proto3";

package tasks.v1;

option go_package = "boba.tasks.v1;tasksv1";

import "google/protobuf/timestamp.proto";

// Service for managing tasks
service Tasks {
    // Get all tasks for a user
    rpc GetAllTasks (GetAllTasksRequest) returns (GetAllTasksResponse);

    // Start a task for a user
    rpc StartTask (TaskActionRequest) returns (TaskActionResponse);

    // Complete a task for a user
    rpc CompleteTask (TaskActionRequest) returns (TaskActionResponse);

    // Claim reward for a completed task
    rpc ClaimTaskReward (TaskActionRequest) returns (ClaimTaskRewardResponse);

    // Get the number of consecutive days a user completed tasks
    rpc GetTasksDaysStreak (UserRequest) returns (GetTasksDaysStreakResponse);
}

// Common request structure for user-related requests
message UserRequest {
    int64 user_id = 1;
}

// Common request structure for task actions
message TaskActionRequest {
    int64 user_id = 1;
    int64 task_id = 2;
}

// Common response structure for task actions
message TaskActionResponse {
    bool success = 1;
    string message = 2;
}

// Request to get all tasks for a user
message GetAllTasksRequest {
    int64 user_id = 1;
}

// Response with a list of tasks
message GetAllTasksResponse {
    repeated Task tasks = 1;
}

// Response for claiming a task reward
message ClaimTaskRewardResponse {
    bool success = 1;
    int64 amount = 2;
    string message = 3;
}

// Task structure
message Task {
    int64 id = 1;
    string title = 2;
    string description = 3;
    TaskType task_type = 4;
    int64 reward = 5;
    TaskStatus status = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

// Task type enum
enum TaskType {
    TASK_TYPE_UNSPECIFIED = 0;
    TASK_TYPE_ON_CHAIN = 1;
    TASK_TYPE_SOCIAL = 2;
    TASK_TYPE_FRIEND = 3;
    TASK_TYPE_FARMING = 4;
    TASK_TYPE_GAME = 5;
}

// Task status enum
enum TaskStatus {
    TASK_STATUS_UNSPECIFIED = 0;
    TASK_STATUS_NOT_STARTED = 1;
    TASK_STATUS_ACTIVE = 2;
    TASK_STATUS_COMPLETED = 3;
    TASK_STATUS_PAID = 4;
}

// Response with the number of consecutive days
message GetTasksDaysStreakResponse {
    int32 consecutive_days = 1;
}
