syntax = "proto3";

package payment;

option go_package = "boba.payment.v1;paymentv1";

service PaymentService {
  rpc GetPaymentMethods (GetPaymentMethodsRequest) returns (GetPaymentMethodsResponse);
  rpc GetInvoiceLink (GetInvoiceLinkRequest) returns (GetInvoiceLinkResponse);
  rpc GetPaymentStatus (GetPaymentStatusRequest) returns (GetPaymentStatusResponse);
  // Telegram handlers
  rpc HandleTelegramPreCheckoutQuery (HandleTelegramPreCheckoutQueryRequest) returns (HandleTelegramPreCheckoutQueryResponse);
  rpc HandleTelegramSuccessfulPayment (HandleTelegramSuccessfulPaymentRequest) returns (HandleTelegramSuccessfulPaymentResponse);
  // rpc HandleAeonPaymentWebhook (HandleAeonPaymentWebhookRequest) returns (HandleAeonPaymentWebhookResponse);
}

message GetPaymentMethodsRequest {
  // Пустой запрос
}

message GetPaymentMethodsResponse {
  repeated PaymentMethod methods = 1;
}

message PaymentMethod {
  int32 id = 1;
  string name = 2;
  string type = 3;
}

message  GetInvoiceLinkRequest {
  int64 user_id = 1;
  int64 payment_method_id = 2;
  string currency = 3;
  int64 item_id = 4;
  float price_usd = 5;
  string payload = 6;
}

message GetInvoiceLinkResponse {
  string payment_id = 1;
  string payment_type = 2;
  string payment_url = 3;
}

message GetPaymentStatusRequest {
  int64 user_id = 1;
  string payment_id = 2;
}

message GetPaymentStatusResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
}

enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_COMPLETED = 2;
  PAYMENT_STATUS_FAILED = 3;
}

message HandleTelegramPreCheckoutQueryRequest {
  string query_id = 1;
  string currency = 2;
  int64  amount = 3;
  string payload = 4;
}

message HandleTelegramPreCheckoutQueryResponse {
  bool success = 1;
}

message HandleTelegramSuccessfulPaymentRequest {
  string payload = 1;
}

message HandleTelegramSuccessfulPaymentResponse {
  bool success = 1;
}