// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: referral/referral.proto

package referralv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create a referral relationship
type MakeUserReferralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // ID of the user becoming a referral
	ReferrerKey string `protobuf:"bytes,2,opt,name=referrer_key,json=referrerKey,proto3" json:"referrer_key,omitempty"` // Referral key of the referrer
}

func (x *MakeUserReferralRequest) Reset() {
	*x = MakeUserReferralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeUserReferralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeUserReferralRequest) ProtoMessage() {}

func (x *MakeUserReferralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeUserReferralRequest.ProtoReflect.Descriptor instead.
func (*MakeUserReferralRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{0}
}

func (x *MakeUserReferralRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MakeUserReferralRequest) GetReferrerKey() string {
	if x != nil {
		return x.ReferrerKey
	}
	return ""
}

// Response for creating a referral relationship
type MakeUserReferralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Operation success status
}

func (x *MakeUserReferralResponse) Reset() {
	*x = MakeUserReferralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeUserReferralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeUserReferralResponse) ProtoMessage() {}

func (x *MakeUserReferralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeUserReferralResponse.ProtoReflect.Descriptor instead.
func (*MakeUserReferralResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{1}
}

func (x *MakeUserReferralResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request to create a referral link
type GetReferralCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user for whom the link is created
}

func (x *GetReferralCodeRequest) Reset() {
	*x = GetReferralCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralCodeRequest) ProtoMessage() {}

func (x *GetReferralCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralCodeRequest.ProtoReflect.Descriptor instead.
func (*GetReferralCodeRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{2}
}

func (x *GetReferralCodeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response for creating a referral link
type GetReferralCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferralCode string `protobuf:"bytes,1,opt,name=referral_code,json=referralCode,proto3" json:"referral_code,omitempty"` // Created referral link
}

func (x *GetReferralCodeResponse) Reset() {
	*x = GetReferralCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralCodeResponse) ProtoMessage() {}

func (x *GetReferralCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralCodeResponse.ProtoReflect.Descriptor instead.
func (*GetReferralCodeResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{3}
}

func (x *GetReferralCodeResponse) GetReferralCode() string {
	if x != nil {
		return x.ReferralCode
	}
	return ""
}

// Request to get the list of a user's referrals
type GetReferralsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // ID of the user
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // Page number for pagination
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Number of records per page
}

func (x *GetReferralsListRequest) Reset() {
	*x = GetReferralsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralsListRequest) ProtoMessage() {}

func (x *GetReferralsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralsListRequest.ProtoReflect.Descriptor instead.
func (*GetReferralsListRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{4}
}

func (x *GetReferralsListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetReferralsListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReferralsListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response with the list of user's referrals
type GetReferralsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Referrals  []*ReferralInfo `protobuf:"bytes,1,rep,name=referrals,proto3" json:"referrals,omitempty"`                      // List of referrals
	TotalCount int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total number of referrals
}

func (x *GetReferralsListResponse) Reset() {
	*x = GetReferralsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralsListResponse) ProtoMessage() {}

func (x *GetReferralsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralsListResponse.ProtoReflect.Descriptor instead.
func (*GetReferralsListResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{5}
}

func (x *GetReferralsListResponse) GetReferrals() []*ReferralInfo {
	if x != nil {
		return x.Referrals
	}
	return nil
}

func (x *GetReferralsListResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Information about a referral
type ReferralInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // ID of the referral
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                 // Username of the referral
	JoinedAt string `protobuf:"bytes,3,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"` // Join date
}

func (x *ReferralInfo) Reset() {
	*x = ReferralInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferralInfo) ProtoMessage() {}

func (x *ReferralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferralInfo.ProtoReflect.Descriptor instead.
func (*ReferralInfo) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{6}
}

func (x *ReferralInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReferralInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ReferralInfo) GetJoinedAt() string {
	if x != nil {
		return x.JoinedAt
	}
	return ""
}

// Request to get the count of a user's referrals
type GetReferralCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *GetReferralCountRequest) Reset() {
	*x = GetReferralCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralCountRequest) ProtoMessage() {}

func (x *GetReferralCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralCountRequest.ProtoReflect.Descriptor instead.
func (*GetReferralCountRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{7}
}

func (x *GetReferralCountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the number of referrals
type GetReferralCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // Number of referrals
}

func (x *GetReferralCountResponse) Reset() {
	*x = GetReferralCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferralCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferralCountResponse) ProtoMessage() {}

func (x *GetReferralCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferralCountResponse.ProtoReflect.Descriptor instead.
func (*GetReferralCountResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{8}
}

func (x *GetReferralCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request to get the referrer of a user
type GetReferrerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *GetReferrerRequest) Reset() {
	*x = GetReferrerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferrerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferrerRequest) ProtoMessage() {}

func (x *GetReferrerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferrerRequest.ProtoReflect.Descriptor instead.
func (*GetReferrerRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{9}
}

func (x *GetReferrerRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the referrer's information
type GetReferrerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferrerId       int64  `protobuf:"varint,1,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id,omitempty"`                  // ID of the referrer
	ReferrerUsername string `protobuf:"bytes,2,opt,name=referrer_username,json=referrerUsername,proto3" json:"referrer_username,omitempty"` // Username of the referrer
}

func (x *GetReferrerResponse) Reset() {
	*x = GetReferrerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferrerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferrerResponse) ProtoMessage() {}

func (x *GetReferrerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferrerResponse.ProtoReflect.Descriptor instead.
func (*GetReferrerResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{10}
}

func (x *GetReferrerResponse) GetReferrerId() int64 {
	if x != nil {
		return x.ReferrerId
	}
	return 0
}

func (x *GetReferrerResponse) GetReferrerUsername() string {
	if x != nil {
		return x.ReferrerUsername
	}
	return ""
}

// Request to claim the referral tokens
type ClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *ClaimRequest) Reset() {
	*x = ClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRequest) ProtoMessage() {}

func (x *ClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRequest.ProtoReflect.Descriptor instead.
func (*ClaimRequest) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{11}
}

func (x *ClaimRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the claiming information
type ClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinsCollected int64 `protobuf:"varint,1,opt,name=coins_collected,json=coinsCollected,proto3" json:"coins_collected,omitempty"` // Number of coins collected
	Success        bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                     // Indicates if the coins were successfully collected
}

func (x *ClaimResponse) Reset() {
	*x = ClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_referral_referral_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimResponse) ProtoMessage() {}

func (x *ClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_referral_referral_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimResponse.ProtoReflect.Descriptor instead.
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return file_referral_referral_proto_rawDescGZIP(), []int{12}
}

func (x *ClaimResponse) GetCoinsCollected() int64 {
	if x != nil {
		return x.CoinsCollected
	}
	return 0
}

func (x *ClaimResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_referral_referral_proto protoreflect.FileDescriptor

var file_referral_referral_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x22, 0x55, 0x0a, 0x17, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x18, 0x4d, 0x61,
	0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x63, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x71, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x0c, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0x32, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x32, 0xf9, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x12, 0x59, 0x0a, 0x10, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12,
	0x16, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x1d, 0x5a, 0x1b, 0x62, 0x6f, 0x62, 0x61, 0x2e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_referral_referral_proto_rawDescOnce sync.Once
	file_referral_referral_proto_rawDescData = file_referral_referral_proto_rawDesc
)

func file_referral_referral_proto_rawDescGZIP() []byte {
	file_referral_referral_proto_rawDescOnce.Do(func() {
		file_referral_referral_proto_rawDescData = protoimpl.X.CompressGZIP(file_referral_referral_proto_rawDescData)
	})
	return file_referral_referral_proto_rawDescData
}

var file_referral_referral_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_referral_referral_proto_goTypes = []any{
	(*MakeUserReferralRequest)(nil),  // 0: referral.MakeUserReferralRequest
	(*MakeUserReferralResponse)(nil), // 1: referral.MakeUserReferralResponse
	(*GetReferralCodeRequest)(nil),   // 2: referral.GetReferralCodeRequest
	(*GetReferralCodeResponse)(nil),  // 3: referral.GetReferralCodeResponse
	(*GetReferralsListRequest)(nil),  // 4: referral.GetReferralsListRequest
	(*GetReferralsListResponse)(nil), // 5: referral.GetReferralsListResponse
	(*ReferralInfo)(nil),             // 6: referral.ReferralInfo
	(*GetReferralCountRequest)(nil),  // 7: referral.GetReferralCountRequest
	(*GetReferralCountResponse)(nil), // 8: referral.GetReferralCountResponse
	(*GetReferrerRequest)(nil),       // 9: referral.GetReferrerRequest
	(*GetReferrerResponse)(nil),      // 10: referral.GetReferrerResponse
	(*ClaimRequest)(nil),             // 11: referral.ClaimRequest
	(*ClaimResponse)(nil),            // 12: referral.ClaimResponse
}
var file_referral_referral_proto_depIdxs = []int32{
	6,  // 0: referral.GetReferralsListResponse.referrals:type_name -> referral.ReferralInfo
	0,  // 1: referral.Referral.MakeUserReferral:input_type -> referral.MakeUserReferralRequest
	2,  // 2: referral.Referral.GetReferralCode:input_type -> referral.GetReferralCodeRequest
	4,  // 3: referral.Referral.GetReferralsList:input_type -> referral.GetReferralsListRequest
	7,  // 4: referral.Referral.GetReferralCount:input_type -> referral.GetReferralCountRequest
	9,  // 5: referral.Referral.GetReferrer:input_type -> referral.GetReferrerRequest
	11, // 6: referral.Referral.Claim:input_type -> referral.ClaimRequest
	1,  // 7: referral.Referral.MakeUserReferral:output_type -> referral.MakeUserReferralResponse
	3,  // 8: referral.Referral.GetReferralCode:output_type -> referral.GetReferralCodeResponse
	5,  // 9: referral.Referral.GetReferralsList:output_type -> referral.GetReferralsListResponse
	8,  // 10: referral.Referral.GetReferralCount:output_type -> referral.GetReferralCountResponse
	10, // 11: referral.Referral.GetReferrer:output_type -> referral.GetReferrerResponse
	12, // 12: referral.Referral.Claim:output_type -> referral.ClaimResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_referral_referral_proto_init() }
func file_referral_referral_proto_init() {
	if File_referral_referral_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_referral_referral_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MakeUserReferralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MakeUserReferralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReferralInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferralCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferrerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetReferrerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_referral_referral_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_referral_referral_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_referral_referral_proto_goTypes,
		DependencyIndexes: file_referral_referral_proto_depIdxs,
		MessageInfos:      file_referral_referral_proto_msgTypes,
	}.Build()
	File_referral_referral_proto = out.File
	file_referral_referral_proto_rawDesc = nil
	file_referral_referral_proto_goTypes = nil
	file_referral_referral_proto_depIdxs = nil
}
