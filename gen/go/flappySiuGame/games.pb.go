// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: flappySiuGame/games.proto

package flappySiuGamev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_flappySiuGame_games_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNumber   int32   `protobuf:"varint,1,opt,name=game_number,json=gameNumber,proto3" json:"game_number,omitempty"`      // Games counter
	Multiplier   float32 `protobuf:"fixed32,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`                       // Tokens multiplier saved from previous game
	SessionToken string  `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"` // Current game session token
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_flappySiuGame_games_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetGameNumber() int32 {
	if x != nil {
		return x.GameNumber
	}
	return 0
}

func (x *CreateSessionResponse) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *CreateSessionResponse) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

type SubmitScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameNumber   int32  `protobuf:"varint,1,opt,name=game_number,json=gameNumber,proto3" json:"game_number,omitempty"`
	Score        int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	Signature    string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"` // Signature for security validation
}

func (x *SubmitScoreRequest) Reset() {
	*x = SubmitScoreRequest{}
	mi := &file_flappySiuGame_games_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitScoreRequest) ProtoMessage() {}

func (x *SubmitScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitScoreRequest.ProtoReflect.Descriptor instead.
func (*SubmitScoreRequest) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitScoreRequest) GetGameNumber() int32 {
	if x != nil {
		return x.GameNumber
	}
	return 0
}

func (x *SubmitScoreRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SubmitScoreRequest) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SubmitScoreRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SubmitScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the score submission was successful
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Additional information or error details
}

func (x *SubmitScoreResponse) Reset() {
	*x = SubmitScoreResponse{}
	mi := &file_flappySiuGame_games_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitScoreResponse) ProtoMessage() {}

func (x *SubmitScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitScoreResponse.ProtoReflect.Descriptor instead.
func (*SubmitScoreResponse) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitScoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitScoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBombOrBonusStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBombOrBonusStatusRequest) Reset() {
	*x = GetBombOrBonusStatusRequest{}
	mi := &file_flappySiuGame_games_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBombOrBonusStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBombOrBonusStatusRequest) ProtoMessage() {}

func (x *GetBombOrBonusStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBombOrBonusStatusRequest.ProtoReflect.Descriptor instead.
func (*GetBombOrBonusStatusRequest) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{4}
}

func (x *GetBombOrBonusStatusRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetBombOrBonusStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opened      []*OpenedCard `protobuf:"bytes,1,rep,name=opened,proto3" json:"opened,omitempty"`                                 // List of opened cards and their multipliers
	PriceToOpen int32         `protobuf:"varint,2,opt,name=price_to_open,json=priceToOpen,proto3" json:"price_to_open,omitempty"` // Price for the next card to open
}

func (x *GetBombOrBonusStatusResponse) Reset() {
	*x = GetBombOrBonusStatusResponse{}
	mi := &file_flappySiuGame_games_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBombOrBonusStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBombOrBonusStatusResponse) ProtoMessage() {}

func (x *GetBombOrBonusStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBombOrBonusStatusResponse.ProtoReflect.Descriptor instead.
func (*GetBombOrBonusStatusResponse) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{5}
}

func (x *GetBombOrBonusStatusResponse) GetOpened() []*OpenedCard {
	if x != nil {
		return x.Opened
	}
	return nil
}

func (x *GetBombOrBonusStatusResponse) GetPriceToOpen() int32 {
	if x != nil {
		return x.PriceToOpen
	}
	return 0
}

type OpenedCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardNumber int32   `protobuf:"varint,1,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"` // The number of the opened card
	Multiplier float32 `protobuf:"fixed32,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`                  // The multiplier value of the opened card
}

func (x *OpenedCard) Reset() {
	*x = OpenedCard{}
	mi := &file_flappySiuGame_games_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenedCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenedCard) ProtoMessage() {}

func (x *OpenedCard) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenedCard.ProtoReflect.Descriptor instead.
func (*OpenedCard) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{6}
}

func (x *OpenedCard) GetCardNumber() int32 {
	if x != nil {
		return x.CardNumber
	}
	return 0
}

func (x *OpenedCard) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

type BombOrBonusRevealCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CardNumber int32 `protobuf:"varint,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"` // The card to reveal
}

func (x *BombOrBonusRevealCardRequest) Reset() {
	*x = BombOrBonusRevealCardRequest{}
	mi := &file_flappySiuGame_games_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BombOrBonusRevealCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BombOrBonusRevealCardRequest) ProtoMessage() {}

func (x *BombOrBonusRevealCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BombOrBonusRevealCardRequest.ProtoReflect.Descriptor instead.
func (*BombOrBonusRevealCardRequest) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{7}
}

func (x *BombOrBonusRevealCardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BombOrBonusRevealCardRequest) GetCardNumber() int32 {
	if x != nil {
		return x.CardNumber
	}
	return 0
}

type BombOrBonusRevealCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultMultiplier float32 `protobuf:"fixed32,1,opt,name=result_multiplier,json=resultMultiplier,proto3" json:"result_multiplier,omitempty"` // Multiplier received from the revealed card
	NextPrice        int32   `protobuf:"varint,2,opt,name=next_price,json=nextPrice,proto3" json:"next_price,omitempty"`                       // Price for the next card to open
}

func (x *BombOrBonusRevealCardResponse) Reset() {
	*x = BombOrBonusRevealCardResponse{}
	mi := &file_flappySiuGame_games_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BombOrBonusRevealCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BombOrBonusRevealCardResponse) ProtoMessage() {}

func (x *BombOrBonusRevealCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flappySiuGame_games_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BombOrBonusRevealCardResponse.ProtoReflect.Descriptor instead.
func (*BombOrBonusRevealCardResponse) Descriptor() ([]byte, []int) {
	return file_flappySiuGame_games_proto_rawDescGZIP(), []int{8}
}

func (x *BombOrBonusRevealCardResponse) GetResultMultiplier() float32 {
	if x != nil {
		return x.ResultMultiplier
	}
	return 0
}

func (x *BombOrBonusRevealCardResponse) GetNextPrice() int32 {
	if x != nil {
		return x.NextPrice
	}
	return 0
}

var File_flappySiuGame_games_proto protoreflect.FileDescriptor

var file_flappySiuGame_games_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2f,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66, 0x6c, 0x61,
	0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6d,
	0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x75,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x1c, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6b,
	0x0a, 0x1d, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x76,
	0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x32, 0xa6, 0x03, 0x0a, 0x0d,
	0x46, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47,
	0x61, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70,
	0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x6c,
	0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79,
	0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6d, 0x62, 0x4f,
	0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x72, 0x0a, 0x15, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x66, 0x6c, 0x61, 0x70,
	0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c, 0x61, 0x70, 0x70, 0x79, 0x53,
	0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x42, 0x6f, 0x6d, 0x62, 0x4f, 0x72, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x62, 0x6f, 0x62, 0x61, 0x2e, 0x66, 0x6c, 0x61,
	0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x3b, 0x66, 0x6c,
	0x61, 0x70, 0x70, 0x79, 0x53, 0x69, 0x75, 0x47, 0x61, 0x6d, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flappySiuGame_games_proto_rawDescOnce sync.Once
	file_flappySiuGame_games_proto_rawDescData = file_flappySiuGame_games_proto_rawDesc
)

func file_flappySiuGame_games_proto_rawDescGZIP() []byte {
	file_flappySiuGame_games_proto_rawDescOnce.Do(func() {
		file_flappySiuGame_games_proto_rawDescData = protoimpl.X.CompressGZIP(file_flappySiuGame_games_proto_rawDescData)
	})
	return file_flappySiuGame_games_proto_rawDescData
}

var file_flappySiuGame_games_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_flappySiuGame_games_proto_goTypes = []any{
	(*CreateSessionRequest)(nil),          // 0: flappySiuGame.CreateSessionRequest
	(*CreateSessionResponse)(nil),         // 1: flappySiuGame.CreateSessionResponse
	(*SubmitScoreRequest)(nil),            // 2: flappySiuGame.SubmitScoreRequest
	(*SubmitScoreResponse)(nil),           // 3: flappySiuGame.SubmitScoreResponse
	(*GetBombOrBonusStatusRequest)(nil),   // 4: flappySiuGame.GetBombOrBonusStatusRequest
	(*GetBombOrBonusStatusResponse)(nil),  // 5: flappySiuGame.GetBombOrBonusStatusResponse
	(*OpenedCard)(nil),                    // 6: flappySiuGame.OpenedCard
	(*BombOrBonusRevealCardRequest)(nil),  // 7: flappySiuGame.BombOrBonusRevealCardRequest
	(*BombOrBonusRevealCardResponse)(nil), // 8: flappySiuGame.BombOrBonusRevealCardResponse
}
var file_flappySiuGame_games_proto_depIdxs = []int32{
	6, // 0: flappySiuGame.GetBombOrBonusStatusResponse.opened:type_name -> flappySiuGame.OpenedCard
	0, // 1: flappySiuGame.FlappySiuGame.CreateSession:input_type -> flappySiuGame.CreateSessionRequest
	2, // 2: flappySiuGame.FlappySiuGame.SubmitScore:input_type -> flappySiuGame.SubmitScoreRequest
	4, // 3: flappySiuGame.FlappySiuGame.GetBombOrBonusStatus:input_type -> flappySiuGame.GetBombOrBonusStatusRequest
	7, // 4: flappySiuGame.FlappySiuGame.BombOrBonusRevealCard:input_type -> flappySiuGame.BombOrBonusRevealCardRequest
	1, // 5: flappySiuGame.FlappySiuGame.CreateSession:output_type -> flappySiuGame.CreateSessionResponse
	3, // 6: flappySiuGame.FlappySiuGame.SubmitScore:output_type -> flappySiuGame.SubmitScoreResponse
	5, // 7: flappySiuGame.FlappySiuGame.GetBombOrBonusStatus:output_type -> flappySiuGame.GetBombOrBonusStatusResponse
	8, // 8: flappySiuGame.FlappySiuGame.BombOrBonusRevealCard:output_type -> flappySiuGame.BombOrBonusRevealCardResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_flappySiuGame_games_proto_init() }
func file_flappySiuGame_games_proto_init() {
	if File_flappySiuGame_games_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flappySiuGame_games_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flappySiuGame_games_proto_goTypes,
		DependencyIndexes: file_flappySiuGame_games_proto_depIdxs,
		MessageInfos:      file_flappySiuGame_games_proto_msgTypes,
	}.Build()
	File_flappySiuGame_games_proto = out.File
	file_flappySiuGame_games_proto_rawDesc = nil
	file_flappySiuGame_games_proto_goTypes = nil
	file_flappySiuGame_games_proto_depIdxs = nil
}
