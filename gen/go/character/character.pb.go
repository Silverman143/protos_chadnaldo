// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: character/character.proto

package characterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create character
type CreateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCharacterRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response for create character
type CreateCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates if the character created successful
}

func (x *CreateCharacterResponse) Reset() {
	*x = CreateCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterResponse) ProtoMessage() {}

func (x *CreateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterResponse.ProtoReflect.Descriptor instead.
func (*CreateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCharacterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request to get the current character stats
type GetCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{2}
}

func (x *GetCharacterRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the current character stats
type GetCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                              // Name of the character
	Level               int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`                                                           // Level of the character
	MiningRate          int32  `protobuf:"varint,3,opt,name=mining_rate,json=miningRate,proto3" json:"mining_rate,omitempty"`                               // Mining rate of the character
	MiningDuration      int32  `protobuf:"varint,4,opt,name=mining_duration,json=miningDuration,proto3" json:"mining_duration,omitempty"`                   // Mining duration of the character
	CurrentSkinId       int32  `protobuf:"varint,5,opt,name=current_skin_id,json=currentSkinId,proto3" json:"current_skin_id,omitempty"`                    // Selected skin id
	CurrentSkinImageUrl string `protobuf:"bytes,6,opt,name=current_skin_image_url,json=currentSkinImageUrl,proto3" json:"current_skin_image_url,omitempty"` // skin image url
}

func (x *GetCharacterResponse) Reset() {
	*x = GetCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterResponse) ProtoMessage() {}

func (x *GetCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{3}
}

func (x *GetCharacterResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCharacterResponse) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetCharacterResponse) GetMiningRate() int32 {
	if x != nil {
		return x.MiningRate
	}
	return 0
}

func (x *GetCharacterResponse) GetMiningDuration() int32 {
	if x != nil {
		return x.MiningDuration
	}
	return 0
}

func (x *GetCharacterResponse) GetCurrentSkinId() int32 {
	if x != nil {
		return x.CurrentSkinId
	}
	return 0
}

func (x *GetCharacterResponse) GetCurrentSkinImageUrl() string {
	if x != nil {
		return x.CurrentSkinImageUrl
	}
	return ""
}

// Request to get the character's level
type GetCharacterLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *GetCharacterLevelRequest) Reset() {
	*x = GetCharacterLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterLevelRequest) ProtoMessage() {}

func (x *GetCharacterLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterLevelRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterLevelRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{4}
}

func (x *GetCharacterLevelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the character's level
type GetCharacterLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"` // Level of the character
}

func (x *GetCharacterLevelResponse) Reset() {
	*x = GetCharacterLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterLevelResponse) ProtoMessage() {}

func (x *GetCharacterLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterLevelResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterLevelResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{5}
}

func (x *GetCharacterLevelResponse) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// Request to get the character's mining level
type GetMiningRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *GetMiningRateRequest) Reset() {
	*x = GetMiningRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningRateRequest) ProtoMessage() {}

func (x *GetMiningRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningRateRequest.ProtoReflect.Descriptor instead.
func (*GetMiningRateRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{6}
}

func (x *GetMiningRateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the character's mining level
type GetMiningRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiningRate int32 `protobuf:"varint,1,opt,name=mining_rate,json=miningRate,proto3" json:"mining_rate,omitempty"` // Mining level of the character
}

func (x *GetMiningRateResponse) Reset() {
	*x = GetMiningRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningRateResponse) ProtoMessage() {}

func (x *GetMiningRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningRateResponse.ProtoReflect.Descriptor instead.
func (*GetMiningRateResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{7}
}

func (x *GetMiningRateResponse) GetMiningRate() int32 {
	if x != nil {
		return x.MiningRate
	}
	return 0
}

// Request to get the list of all characters
type GetAllSkinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // List of all skin
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // Page number for pagination
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Number of records per page
}

func (x *GetAllSkinsRequest) Reset() {
	*x = GetAllSkinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSkinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSkinsRequest) ProtoMessage() {}

func (x *GetAllSkinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSkinsRequest.ProtoReflect.Descriptor instead.
func (*GetAllSkinsRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllSkinsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetAllSkinsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllSkinsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response with the list of all characters
type GetAllSkinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*SkinInfo `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"` // List of all characters
}

func (x *GetAllSkinsResponse) Reset() {
	*x = GetAllSkinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSkinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSkinsResponse) ProtoMessage() {}

func (x *GetAllSkinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSkinsResponse.ProtoReflect.Descriptor instead.
func (*GetAllSkinsResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllSkinsResponse) GetCharacters() []*SkinInfo {
	if x != nil {
		return x.Characters
	}
	return nil
}

// Information about a character
type SkinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkinId          int64  `protobuf:"varint,1,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`                              // ID of the skin
	ImageUrl        string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                         // URL of skin image
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                 // Name of the character
	Level           int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`                                              // Level of the character
	Price           int32  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`                                              // Skin price
	ReferralsToBuy  int32  `protobuf:"varint,6,opt,name=referrals_to_buy,json=referralsToBuy,proto3" json:"referrals_to_buy,omitempty"`    // Ref to buy
	ReferralsToOpen int32  `protobuf:"varint,7,opt,name=referrals_to_open,json=referralsToOpen,proto3" json:"referrals_to_open,omitempty"` // Ref to open without buying
	Bought          bool   `protobuf:"varint,8,opt,name=bought,proto3" json:"bought,omitempty"`                                            // Is user bought this skin
}

func (x *SkinInfo) Reset() {
	*x = SkinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkinInfo) ProtoMessage() {}

func (x *SkinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkinInfo.ProtoReflect.Descriptor instead.
func (*SkinInfo) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{10}
}

func (x *SkinInfo) GetSkinId() int64 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

func (x *SkinInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SkinInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkinInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SkinInfo) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkinInfo) GetReferralsToBuy() int32 {
	if x != nil {
		return x.ReferralsToBuy
	}
	return 0
}

func (x *SkinInfo) GetReferralsToOpen() int32 {
	if x != nil {
		return x.ReferralsToOpen
	}
	return 0
}

func (x *SkinInfo) GetBought() bool {
	if x != nil {
		return x.Bought
	}
	return false
}

// Request to level up a character
type LevelUpCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
}

func (x *LevelUpCharacterRequest) Reset() {
	*x = LevelUpCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpCharacterRequest) ProtoMessage() {}

func (x *LevelUpCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpCharacterRequest.ProtoReflect.Descriptor instead.
func (*LevelUpCharacterRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{11}
}

func (x *LevelUpCharacterRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response after leveling up the character
type LevelUpCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                   // Indicates if the level-up was successful
	NewLevel int32 `protobuf:"varint,2,opt,name=new_level,json=newLevel,proto3" json:"new_level,omitempty"` // The new level of the character
}

func (x *LevelUpCharacterResponse) Reset() {
	*x = LevelUpCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelUpCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpCharacterResponse) ProtoMessage() {}

func (x *LevelUpCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpCharacterResponse.ProtoReflect.Descriptor instead.
func (*LevelUpCharacterResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{12}
}

func (x *LevelUpCharacterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LevelUpCharacterResponse) GetNewLevel() int32 {
	if x != nil {
		return x.NewLevel
	}
	return 0
}

// Request to select the active character
type SelectActiveSkinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	SkinId int64 `protobuf:"varint,2,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"` // ID of the skin to set as active
}

func (x *SelectActiveSkinRequest) Reset() {
	*x = SelectActiveSkinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActiveSkinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActiveSkinRequest) ProtoMessage() {}

func (x *SelectActiveSkinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActiveSkinRequest.ProtoReflect.Descriptor instead.
func (*SelectActiveSkinRequest) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{13}
}

func (x *SelectActiveSkinRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SelectActiveSkinRequest) GetSkinId() int64 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

// Response after selecting the active character
type SelectActiveSkinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates if the character was successfully set as active
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Optional message about the operation
}

func (x *SelectActiveSkinResponse) Reset() {
	*x = SelectActiveSkinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_character_character_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActiveSkinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActiveSkinResponse) ProtoMessage() {}

func (x *SelectActiveSkinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_character_character_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActiveSkinResponse.ProtoReflect.Descriptor instead.
func (*SelectActiveSkinResponse) Descriptor() ([]byte, []int) {
	return file_character_character_proto_rawDescGZIP(), []int{14}
}

func (x *SelectActiveSkinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SelectActiveSkinResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_character_character_proto protoreflect.FileDescriptor

var file_character_character_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe7,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x08, 0x53, 0x6b, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x54,
	0x6f, 0x42, 0x75, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x73, 0x54, 0x6f, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x22, 0x32, 0x0a, 0x17, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x18,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x4b, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x18,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xf2, 0x04, 0x0a,
	0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x21, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6b, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x55, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x62, 0x6f, 0x62, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_character_character_proto_rawDescOnce sync.Once
	file_character_character_proto_rawDescData = file_character_character_proto_rawDesc
)

func file_character_character_proto_rawDescGZIP() []byte {
	file_character_character_proto_rawDescOnce.Do(func() {
		file_character_character_proto_rawDescData = protoimpl.X.CompressGZIP(file_character_character_proto_rawDescData)
	})
	return file_character_character_proto_rawDescData
}

var file_character_character_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_character_character_proto_goTypes = []any{
	(*CreateCharacterRequest)(nil),    // 0: character.CreateCharacterRequest
	(*CreateCharacterResponse)(nil),   // 1: character.CreateCharacterResponse
	(*GetCharacterRequest)(nil),       // 2: character.GetCharacterRequest
	(*GetCharacterResponse)(nil),      // 3: character.GetCharacterResponse
	(*GetCharacterLevelRequest)(nil),  // 4: character.GetCharacterLevelRequest
	(*GetCharacterLevelResponse)(nil), // 5: character.GetCharacterLevelResponse
	(*GetMiningRateRequest)(nil),      // 6: character.GetMiningRateRequest
	(*GetMiningRateResponse)(nil),     // 7: character.GetMiningRateResponse
	(*GetAllSkinsRequest)(nil),        // 8: character.GetAllSkinsRequest
	(*GetAllSkinsResponse)(nil),       // 9: character.GetAllSkinsResponse
	(*SkinInfo)(nil),                  // 10: character.SkinInfo
	(*LevelUpCharacterRequest)(nil),   // 11: character.LevelUpCharacterRequest
	(*LevelUpCharacterResponse)(nil),  // 12: character.LevelUpCharacterResponse
	(*SelectActiveSkinRequest)(nil),   // 13: character.SelectActiveSkinRequest
	(*SelectActiveSkinResponse)(nil),  // 14: character.SelectActiveSkinResponse
}
var file_character_character_proto_depIdxs = []int32{
	10, // 0: character.GetAllSkinsResponse.characters:type_name -> character.SkinInfo
	0,  // 1: character.Character.CreateCharacter:input_type -> character.CreateCharacterRequest
	2,  // 2: character.Character.GetCharacter:input_type -> character.GetCharacterRequest
	4,  // 3: character.Character.GetCharacterLevel:input_type -> character.GetCharacterLevelRequest
	6,  // 4: character.Character.GetMiningRate:input_type -> character.GetMiningRateRequest
	8,  // 5: character.Character.GetAllSkins:input_type -> character.GetAllSkinsRequest
	11, // 6: character.Character.LevelUpCharacter:input_type -> character.LevelUpCharacterRequest
	13, // 7: character.Character.SelectActiveSkin:input_type -> character.SelectActiveSkinRequest
	1,  // 8: character.Character.CreateCharacter:output_type -> character.CreateCharacterResponse
	3,  // 9: character.Character.GetCharacter:output_type -> character.GetCharacterResponse
	5,  // 10: character.Character.GetCharacterLevel:output_type -> character.GetCharacterLevelResponse
	7,  // 11: character.Character.GetMiningRate:output_type -> character.GetMiningRateResponse
	9,  // 12: character.Character.GetAllSkins:output_type -> character.GetAllSkinsResponse
	12, // 13: character.Character.LevelUpCharacter:output_type -> character.LevelUpCharacterResponse
	14, // 14: character.Character.SelectActiveSkin:output_type -> character.SelectActiveSkinResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_character_character_proto_init() }
func file_character_character_proto_init() {
	if File_character_character_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_character_character_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetMiningRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMiningRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSkinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSkinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SkinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*LevelUpCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LevelUpCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActiveSkinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_character_character_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActiveSkinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_character_character_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_character_character_proto_goTypes,
		DependencyIndexes: file_character_character_proto_depIdxs,
		MessageInfos:      file_character_character_proto_msgTypes,
	}.Build()
	File_character_character_proto = out.File
	file_character_character_proto_rawDesc = nil
	file_character_character_proto_goTypes = nil
	file_character_character_proto_depIdxs = nil
}
