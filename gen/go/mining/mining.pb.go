// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: mining/mining.proto

package miningv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get the current mining status
type GetMiningStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetMiningStatusRequest) Reset() {
	*x = GetMiningStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningStatusRequest) ProtoMessage() {}

func (x *GetMiningStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMiningStatusRequest) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{0}
}

func (x *GetMiningStatusRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response with the current mining status
type GetMiningStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiningStatus string                 `protobuf:"bytes,1,opt,name=mining_status,json=miningStatus,proto3" json:"mining_status,omitempty"` // Indicates if mining is currently active
	StartsAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`             // Time when mining started (if applicable)
	FinishAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finish_at,json=finishAt,proto3" json:"finish_at,omitempty"`             // Time when mining finished (if applicable)
	Coins        int64                  `protobuf:"varint,7,opt,name=coins,proto3" json:"coins,omitempty"`                                  // Number of coins mined (if applicable)
}

func (x *GetMiningStatusResponse) Reset() {
	*x = GetMiningStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMiningStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMiningStatusResponse) ProtoMessage() {}

func (x *GetMiningStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMiningStatusResponse.ProtoReflect.Descriptor instead.
func (*GetMiningStatusResponse) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{1}
}

func (x *GetMiningStatusResponse) GetMiningStatus() string {
	if x != nil {
		return x.MiningStatus
	}
	return ""
}

func (x *GetMiningStatusResponse) GetStartsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *GetMiningStatusResponse) GetFinishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishAt
	}
	return nil
}

func (x *GetMiningStatusResponse) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

// Request to start mining
type StartMiningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StartMiningRequest) Reset() {
	*x = StartMiningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMiningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMiningRequest) ProtoMessage() {}

func (x *StartMiningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMiningRequest.ProtoReflect.Descriptor instead.
func (*StartMiningRequest) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{2}
}

func (x *StartMiningRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response when mining has been started
type StartMiningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                       // Indicates if mining was successfully started
	StartsAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`                      // Time when mining started (if applicable)
	FinishAt       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finish_at,json=finishAt,proto3" json:"finish_at,omitempty"`                      // Time when mining finished (if applicable)
	CanClaim       bool                   `protobuf:"varint,4,opt,name=can_claim,json=canClaim,proto3" json:"can_claim,omitempty"`                     // Indicates if the user can claim the mined coins
	IsClaimExpired bool                   `protobuf:"varint,5,opt,name=is_claim_expired,json=isClaimExpired,proto3" json:"is_claim_expired,omitempty"` // Indicates if the claim window has expired
	Coins          int64                  `protobuf:"varint,7,opt,name=coins,proto3" json:"coins,omitempty"`                                           // Number of coins mined (if applicable)
}

func (x *StartMiningResponse) Reset() {
	*x = StartMiningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMiningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMiningResponse) ProtoMessage() {}

func (x *StartMiningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMiningResponse.ProtoReflect.Descriptor instead.
func (*StartMiningResponse) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{3}
}

func (x *StartMiningResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartMiningResponse) GetStartsAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *StartMiningResponse) GetFinishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishAt
	}
	return nil
}

func (x *StartMiningResponse) GetCanClaim() bool {
	if x != nil {
		return x.CanClaim
	}
	return false
}

func (x *StartMiningResponse) GetIsClaimExpired() bool {
	if x != nil {
		return x.IsClaimExpired
	}
	return false
}

func (x *StartMiningResponse) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

// Request to collect mined coins
type CollectCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CollectCoinsRequest) Reset() {
	*x = CollectCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectCoinsRequest) ProtoMessage() {}

func (x *CollectCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectCoinsRequest.ProtoReflect.Descriptor instead.
func (*CollectCoinsRequest) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{4}
}

func (x *CollectCoinsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response after collecting mined coins
type CollectCoinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinsCollected int64 `protobuf:"varint,1,opt,name=coins_collected,json=coinsCollected,proto3" json:"coins_collected,omitempty"` // Number of coins collected
	Success        bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                     // Indicates if the coins were successfully collected
}

func (x *CollectCoinsResponse) Reset() {
	*x = CollectCoinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mining_mining_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectCoinsResponse) ProtoMessage() {}

func (x *CollectCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mining_mining_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectCoinsResponse.ProtoReflect.Descriptor instead.
func (*CollectCoinsResponse) Descriptor() ([]byte, []int) {
	return file_mining_mining_proto_rawDescGZIP(), []int{5}
}

func (x *CollectCoinsResponse) GetCoinsCollected() int64 {
	if x != nil {
		return x.CoinsCollected
	}
	return 0
}

func (x *CollectCoinsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_mining_mining_proto protoreflect.FileDescriptor

var file_mining_mining_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x14, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xef, 0x01, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x62, 0x6f, 0x62, 0x61, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x3b, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mining_mining_proto_rawDescOnce sync.Once
	file_mining_mining_proto_rawDescData = file_mining_mining_proto_rawDesc
)

func file_mining_mining_proto_rawDescGZIP() []byte {
	file_mining_mining_proto_rawDescOnce.Do(func() {
		file_mining_mining_proto_rawDescData = protoimpl.X.CompressGZIP(file_mining_mining_proto_rawDescData)
	})
	return file_mining_mining_proto_rawDescData
}

var file_mining_mining_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mining_mining_proto_goTypes = []any{
	(*GetMiningStatusRequest)(nil),  // 0: mining.GetMiningStatusRequest
	(*GetMiningStatusResponse)(nil), // 1: mining.GetMiningStatusResponse
	(*StartMiningRequest)(nil),      // 2: mining.StartMiningRequest
	(*StartMiningResponse)(nil),     // 3: mining.StartMiningResponse
	(*CollectCoinsRequest)(nil),     // 4: mining.CollectCoinsRequest
	(*CollectCoinsResponse)(nil),    // 5: mining.CollectCoinsResponse
	(*timestamppb.Timestamp)(nil),   // 6: google.protobuf.Timestamp
}
var file_mining_mining_proto_depIdxs = []int32{
	6, // 0: mining.GetMiningStatusResponse.starts_at:type_name -> google.protobuf.Timestamp
	6, // 1: mining.GetMiningStatusResponse.finish_at:type_name -> google.protobuf.Timestamp
	6, // 2: mining.StartMiningResponse.starts_at:type_name -> google.protobuf.Timestamp
	6, // 3: mining.StartMiningResponse.finish_at:type_name -> google.protobuf.Timestamp
	0, // 4: mining.Mining.GetMiningStatus:input_type -> mining.GetMiningStatusRequest
	2, // 5: mining.Mining.StartMining:input_type -> mining.StartMiningRequest
	4, // 6: mining.Mining.CollectCoins:input_type -> mining.CollectCoinsRequest
	1, // 7: mining.Mining.GetMiningStatus:output_type -> mining.GetMiningStatusResponse
	3, // 8: mining.Mining.StartMining:output_type -> mining.StartMiningResponse
	5, // 9: mining.Mining.CollectCoins:output_type -> mining.CollectCoinsResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mining_mining_proto_init() }
func file_mining_mining_proto_init() {
	if File_mining_mining_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mining_mining_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetMiningStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mining_mining_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetMiningStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mining_mining_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StartMiningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mining_mining_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StartMiningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mining_mining_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CollectCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mining_mining_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CollectCoinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mining_mining_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mining_mining_proto_goTypes,
		DependencyIndexes: file_mining_mining_proto_depIdxs,
		MessageInfos:      file_mining_mining_proto_msgTypes,
	}.Build()
	File_mining_mining_proto = out.File
	file_mining_mining_proto_rawDesc = nil
	file_mining_mining_proto_goTypes = nil
	file_mining_mining_proto_depIdxs = nil
}
